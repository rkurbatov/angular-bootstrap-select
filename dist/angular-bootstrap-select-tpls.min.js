!function(t,e,n){"use strict";function o(){function t(t,e,n){function o(){t.$watch("options",l),t.$watch("selection",c),s.on("change",i),(n.multiple||""===n.multiple)&&s.attr("multiple","true"),n.width&&s.attr("width",n.width)}function l(e){t.$applyAsync(function(){s.selectpicker("val",t.selection),s.selectpicker("refresh")})}function c(e,n){t.$applyAsync(function(){s.selectpicker("val",t.selection)})}function i(){var e=[],n=s[0].options;if(n&&n.length)for(var o=0;o<n.length;o++)n[o].selected&&e.push(n[o].value);t.$applyAsync(function(){t.selection=e})}function a(t){return t}var s=e.find("select");t.getContent=a,o()}var e={restrict:"E",templateUrl:"angular-bootstrap-select.tpl.html",scope:{options:"=",selection:"=",onChange:"&",multiple:"@"},link:t};return e}e.module("angular-bootstrap-select",[]).directive("bootstrapSelect",o),o.$inject=[]}(window,window.angular),angular.module("angular-bootstrap-select").run(["$templateCache",function(t){t.put("angular-bootstrap-select.tpl.html",'<select class="selectpicker">\n    <option ng-repeat="option in options"\n            ng-model="selection"\n            ng-attr-data-content="{{ getContent(option.content) }}"\n            value="{{ option.value }}">\n        {{ option.text }}\n    </option>\n</select>')}]);