!function(t,n,e){"use strict";function o(){function t(t,n,e){function o(){t.$watch("options",l),t.$watch("selection",a),i.on("change",c),(e.multiple||""===e.multiple)&&i.attr("multiple","true"),e.width&&i.attr("width",e.width)}function l(n){t.$applyAsync(function(){i.selectpicker("refresh")})}function a(n,e){t.$applyAsync(function(){i.selectpicker("val",t.selection),t.changeCallback()})}function c(){var n=[],e=i[0].options;if(e&&e.length)for(var o=0;o<e.length;o++)e[o].selected&&n.push(e[o].value);t.$applyAsync(function(){t.selection=n})}var i=n.find("select");o()}var n={restrict:"E",templateUrl:"angular-bootstrap-select.tpl.html",scope:{options:"=",selection:"=",changeCallback:"&",multiple:"@"},link:t};return n}n.module("angular-bootstrap-select",[]).directive("bootstrapSelect",o),o.$inject=[]}(window,window.angular),angular.module("angular-bootstrap-select").run(["$templateCache",function(t){t.put("angular-bootstrap-select.tpl.html",'<select class="selectpicker">\n    <option ng-repeat="option in options"\n            ng-bind="option.text"\n            ng-attr-data-content="{{ option.content }}"\n            ng-attr-data-subtext="{{ option.subtext }}"\n            ng-attr-data-icon="{{ option.icon }}"\n            value="{{ option.value }}">\n    </option>\n</select>')}]);